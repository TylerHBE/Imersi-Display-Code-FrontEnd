{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\components\\\\AccountButton.js\",\n  _s = $RefreshSig$();\nimport AvatarPicture from \"./AvatarPicture\";\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountButton = ({\n  avatar,\n  username\n}) => {\n  _s();\n  const [isHover, setIsHover] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHover(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHover(false);\n  };\n  const dropdownStyle = {\n    position: \"relative\",\n    display: \"inline-block\"\n  };\n  const dropdownContentStyle = {\n    display: isHover ? \"block\" : \"none\",\n    position: \"absolute\",\n    backgroundColor: \"#f0f0f0\",\n    minWidth: \"300px\",\n    boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\n    padding: \"12px 16px\",\n    zIndex: 1,\n    right: \"20px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dropdown\",\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    style: dropdownStyle,\n    children: [/*#__PURE__*/_jsxDEV(AvatarPicture, {\n      avatar: avatar,\n      dimension: \"50px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dropdownContent\",\n      style: dropdownContentStyle,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountButton, \"FTC8EpIspi2qaDtU9gFRhqZT02A=\");\n_c = AccountButton;\nexport default AccountButton;\nAccountButton.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"AccountButton\");","map":{"version":3,"names":["AvatarPicture","PropTypes","useState","jsxDEV","_jsxDEV","AccountButton","avatar","username","_s","isHover","setIsHover","handleMouseEnter","handleMouseLeave","dropdownStyle","position","display","dropdownContentStyle","backgroundColor","minWidth","boxShadow","padding","zIndex","right","id","onMouseEnter","onMouseLeave","style","children","dimension","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/components/AccountButton.js"],"sourcesContent":["import AvatarPicture from \"./AvatarPicture\";\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst AccountButton = ( { avatar, username } ) => {\r\n\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const handleMouseEnter = () => {\r\n      setIsHover(true);\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setIsHover(false);\r\n    };\r\n\r\n    const dropdownStyle = {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n    }\r\n\r\n    const dropdownContentStyle = {\r\n        display: isHover ? \"block\" : \"none\",\r\n        position: \"absolute\",\r\n        backgroundColor: \"#f0f0f0\",\r\n        minWidth: \"300px\",\r\n        boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\r\n        padding: \"12px 16px\",\r\n        zIndex: 1,\r\n        right: \"20px\"\r\n    }\r\n\r\n    return (\r\n        <div id = \"dropdown\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style = {dropdownStyle}>\r\n            <AvatarPicture avatar = {avatar} dimension = \"50px\"/>\r\n            <div id = \"dropdownContent\" style = {dropdownContentStyle}>\r\n                <h1>{username}</h1>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n  \r\nexport default AccountButton;  \r\n\r\nAccountButton.propTypes = {\r\n    avatar: PropTypes.string.isRequired, \r\n    username: PropTypes.string.isRequired\r\n}"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGA,CAAE;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAM;EAAAC,EAAA;EAE9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMG,aAAa,GAAG;IAClBC,QAAQ,EAAE,UAAU;IACpBC,OAAO,EAAE;EACb,CAAC;EAED,MAAMC,oBAAoB,GAAG;IACzBD,OAAO,EAAEN,OAAO,GAAG,OAAO,GAAG,MAAM;IACnCK,QAAQ,EAAE,UAAU;IACpBG,eAAe,EAAE,SAAS;IAC1BC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,kCAAkC;IAC7CC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACX,CAAC;EAED,oBACIlB,OAAA;IAAKmB,EAAE,EAAG,UAAU;IAACC,YAAY,EAAEb,gBAAiB;IAACc,YAAY,EAAEb,gBAAiB;IAACc,KAAK,EAAIb,aAAc;IAAAc,QAAA,gBACxGvB,OAAA,CAACJ,aAAa;MAACM,MAAM,EAAIA,MAAO;MAACsB,SAAS,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrD5B,OAAA;MAAKmB,EAAE,EAAG,iBAAiB;MAACG,KAAK,EAAIV,oBAAqB;MAAAW,QAAA,eACtDvB,OAAA;QAAAuB,QAAA,EAAKpB;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd,CAAC;AAACxB,EAAA,CArCIH,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAuCnB,eAAeA,aAAa;AAE5BA,aAAa,CAAC6B,SAAS,GAAG;EACtB5B,MAAM,EAAEL,SAAS,CAACkC,MAAM,CAACC,UAAU;EACnC7B,QAAQ,EAAEN,SAAS,CAACkC,MAAM,CAACC;AAC/B,CAAC;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}