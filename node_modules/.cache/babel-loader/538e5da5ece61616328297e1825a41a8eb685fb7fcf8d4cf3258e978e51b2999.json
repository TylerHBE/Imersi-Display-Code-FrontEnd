{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\pages\\\\JoinBlitzBoutGame.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JoinBlitzBoutGame({\n  token,\n  avatar,\n  username,\n  email\n}) {\n  _s();\n  const [gameKey, setGameKey] = useState(\"\");\n  const [join, setJoin] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleSubmit = e => {\n    // prevent the form from refreshing the whole page\n    e.preventDefault();\n    // make a popup alert showing the \"submitted\" text\n\n    // set configurations\n    const configuration = {\n      method: \"post\",\n      url: \"http://localhost:8080/games/BlitzBout/join-game\",\n      data: {\n        email: email,\n        token: token,\n        avatar: avatar,\n        username: username,\n        gameKey: gameKey\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n\n    // make the API call\n    axios(configuration).then(result => {\n      navigate(\"/games/BlitzBout/play\");\n      setSearchParams({\n        ...searchParams,\n        gameKey: result.data.gameKey\n      });\n      setJoin(true);\n    }).catch(error => {\n      if (error.response) {\n        setErrMsg(error.response.data.message);\n      } else {\n        setErrMsg(\"\");\n      }\n    });\n  };\n  const joinPageStyle = {\n    display: \"flex\",\n    paddingTop: \"3%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#e3e3ed\"\n  };\n  const joinFormStyle = {\n    display: \"flex\",\n    padding: \"5%\",\n    margin: \"5%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\n    borderRadius: \"30px\"\n  };\n  const joinFormElementStyle = {\n    padding: \"1%\",\n    margin: \"1%\"\n  };\n  const joinFormLabelStyle = {\n    padding: \"1%\",\n    marginTop: \"6%\"\n  };\n  const joinFormButtonStyle = {\n    margin: \"6%\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"logInPage\",\n    style: joinPageStyle,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      style: joinFormStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: joinFormElementStyle,\n        children: \"Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          style: joinFormLabelStyle,\n          children: \"Game Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"game key\",\n          name: \"game key\",\n          value: gameKey,\n          onChange: e => setGameKey(e.target.value),\n          placeholder: \"Enter game key\",\n          style: joinFormElementStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => handleSubmit(e),\n        style: joinFormButtonStyle,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), join ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: \"You have joined a game successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errMsg ? errMsg : \"You have not joined a game successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(JoinBlitzBoutGame, \"JFZnrRdBbQV40XsFBWY0JeaXPBQ=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = JoinBlitzBoutGame;\nJoinBlitzBoutGame.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  token: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"JoinBlitzBoutGame\");","map":{"version":3,"names":["React","useState","PropTypes","Form","Button","axios","useNavigate","useSearchParams","jsxDEV","_jsxDEV","JoinBlitzBoutGame","token","avatar","username","email","_s","gameKey","setGameKey","join","setJoin","errMsg","setErrMsg","navigate","searchParams","setSearchParams","handleSubmit","e","preventDefault","configuration","method","url","data","headers","Authorization","then","result","catch","error","response","message","joinPageStyle","display","paddingTop","flexDirection","alignItems","backgroundColor","joinFormStyle","padding","margin","boxShadow","borderRadius","joinFormElementStyle","joinFormLabelStyle","marginTop","joinFormButtonStyle","id","style","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","name","value","onChange","target","placeholder","variant","onClick","className","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/pages/JoinBlitzBoutGame.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function JoinBlitzBoutGame({ token, avatar, username, email }) {\r\n\r\n  const [gameKey, setGameKey] = useState(\"\");\r\n  const [join, setJoin] = useState(false);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleSubmit = (e) => {\r\n    // prevent the form from refreshing the whole page\r\n    e.preventDefault();\r\n    // make a popup alert showing the \"submitted\" text\r\n\r\n    // set configurations\r\n    const configuration = {\r\n      method: \"post\",\r\n      url: \"http://localhost:8080/games/BlitzBout/join-game\",\r\n      data: {\r\n        email: email,\r\n        token: token,\r\n        avatar: avatar,\r\n        username: username,\r\n        gameKey: gameKey\r\n      },\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    // make the API call\r\n    axios(configuration)\r\n      .then((result) => {\r\n\r\n        navigate(\"/games/BlitzBout/play\");\r\n        setSearchParams({ ...searchParams, gameKey: result.data.gameKey });\r\n        setJoin(true)\r\n\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          setErrMsg(error.response.data.message);\r\n        }\r\n        else {\r\n          setErrMsg(\"\");\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  const joinPageStyle = {\r\n\r\n    display: \"flex\",\r\n    paddingTop: \"3%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#e3e3ed\",\r\n\r\n  }\r\n\r\n  const joinFormStyle = {\r\n\r\n    display: \"flex\",\r\n    padding: \"5%\",\r\n    margin: \"5%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0px 8px 16px 0px rgba(0,0,0,0.2)\",\r\n    borderRadius: \"30px\"\r\n\r\n  }\r\n  const joinFormElementStyle = {\r\n\r\n    padding: \"1%\",\r\n    margin: \"1%\",\r\n\r\n  }\r\n  const joinFormLabelStyle = {\r\n\r\n    padding: \"1%\",\r\n    marginTop: \"6%\",\r\n\r\n  }\r\n\r\n  const joinFormButtonStyle = {\r\n\r\n    margin: \"6%\",\r\n\r\n  }\r\n\r\n  return (\r\n    <div id=\"logInPage\" style={joinPageStyle}>\r\n\r\n      <Form onSubmit={(e) => handleSubmit(e)} style={joinFormStyle}>\r\n        <h2 style={joinFormElementStyle}>Join game</h2>\r\n        {/* email */}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label style={joinFormLabelStyle}>Game Key</Form.Label>\r\n          <Form.Control\r\n            type=\"game key\"\r\n            name=\"game key\"\r\n            value={gameKey}\r\n            onChange={(e) => setGameKey(e.target.value)}\r\n            placeholder=\"Enter game key\"\r\n            style={joinFormElementStyle}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* submit button */}\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={(e) => handleSubmit(e)}\r\n          style={joinFormButtonStyle}\r\n        >\r\n          Join\r\n        </Button>\r\n\r\n        {/* display success message */}\r\n        {join ? (\r\n          <p className=\"text-success\">You have joined a game successfully</p>\r\n        ) : (\r\n          <p className=\"text-danger\">{errMsg ? errMsg : \"You have not joined a game successfully\"}</p>\r\n        )}\r\n\r\n      </Form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nJoinBlitzBoutGame.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  token: PropTypes.string\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}