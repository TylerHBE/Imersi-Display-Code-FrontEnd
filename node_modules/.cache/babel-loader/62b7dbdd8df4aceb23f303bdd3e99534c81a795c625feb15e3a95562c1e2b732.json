{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\pages\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LogIn({\n  setToken,\n  setAvatar,\n  setUsername\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const handleSubmit = e => {\n    // prevent the form from refreshing the whole page\n    e.preventDefault();\n    // make a popup alert showing the \"submitted\" text\n\n    // set configurations\n    const configuration = {\n      method: \"post\",\n      url: \"http://localhost:8080/log-in\",\n      data: {\n        email,\n        password\n      }\n    };\n\n    // make the API call\n    axios(configuration).then(result => {\n      setLogin(true);\n      // set the cookie token\n      setToken(result.data.token);\n      // set avatar and username\n      setAvatar(result.data.avatar);\n      setUsername(result.data.username);\n    }).catch(error => {\n      error = new Error();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => handleSubmit(e),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), login ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: \"You Are Logged in Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: \"You Are Not Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(LogIn, \"uM0LZvvwjB3VRM60vtHdK6gXHlo=\");\n_c = LogIn;\nLogIn.propTypes = {\n  setToken: PropTypes.func.isRequired,\n  setAvatar: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","PropTypes","Form","Button","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LogIn","setToken","setAvatar","setUsername","_s","email","setEmail","password","setPassword","login","setLogin","handleSubmit","e","preventDefault","configuration","method","url","data","then","result","token","avatar","username","catch","error","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","name","value","onChange","target","placeholder","variant","onClick","className","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/pages/LogIn.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default function LogIn( { setToken, setAvatar, setUsername } ) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [login, setLogin] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    // prevent the form from refreshing the whole page\r\n    e.preventDefault();\r\n    // make a popup alert showing the \"submitted\" text\r\n\r\n    // set configurations\r\n    const configuration = {\r\n      method: \"post\",\r\n      url: \"http://localhost:8080/log-in\",\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    };\r\n\r\n    // make the API call\r\n    axios(configuration)\r\n      .then((result) => {\r\n        setLogin(true);\r\n        // set the cookie token\r\n        setToken(result.data.token);\r\n        // set avatar and username\r\n        setAvatar(result.data.avatar);\r\n        setUsername(result.data.username)\r\n      })\r\n      .catch((error) => {\r\n        error = new Error();\r\n    });\r\n\r\n  }\r\n\r\n    return (\r\n        <>\r\n          <h2>Log In</h2>\r\n          <Form onSubmit={(e)=>handleSubmit(e)}>\r\n            {/* email */}\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {/* password */}\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n             />\r\n            </Form.Group>\r\n\r\n            {/* submit button */}\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            {/* display success message */}\r\n            {login ? (\r\n              <p className=\"text-success\">You Are Logged in Successfully</p>\r\n              ) : (\r\n              <p className=\"text-danger\">You Are Not Logged in</p>\r\n            )}\r\n\r\n          </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nLogIn.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n  setAvatar: PropTypes.func.isRequired, \r\n  setUsername: PropTypes.func.isRequired\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}