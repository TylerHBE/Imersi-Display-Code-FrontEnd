{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\pages\\\\BlitzBoutAnswers.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlitzBoutAnswers = ({\n  gameName,\n  gameKey,\n  answerData,\n  answerScore,\n  score,\n  userAnswer\n}) => {\n  const blitzBoutMainLobbyWrapperStyle = {\n    display: \"flex\",\n    padding: \"2%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#334173\",\n    fontSize: \"2.5em\",\n    fontFamily: \"poppins\",\n    fontColor: \"white\"\n  };\n  const blitzBoutAnswersStyle = {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    minWidth: \"80%\"\n  };\n\n  // #e3e3ed\n\n  const blitzBoutAnswersWrapperStyle = {\n    display: \"flex\",\n    padding: \"1%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#e3e3ed\",\n    fontFamily: \"poppins\",\n    fontColor: \"#334173\",\n    minWidth: \"80%\"\n  };\n  const AnswerCard = ({\n    answer,\n    index\n  }) => {\n    console.log(index);\n    console.log(answer);\n    const userCardStyleRight = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyItems: \"center\",\n      backgroundColor: \"green\",\n      fontSize: \"1em\",\n      fontFamily: \"poppins\",\n      fontColor: \"#334173\",\n      padding: \"2%\",\n      margin: \"2%\",\n      minWidth: \"25%\"\n    };\n    const userCardStyleWrong = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyItems: \"center\",\n      backgroundColor: \"red\",\n      fontSize: \"1em\",\n      fontFamily: \"poppins\",\n      fontColor: \"#334173\",\n      padding: \"2%\",\n      margin: \"2%\",\n      minWidth: \"25%\"\n    };\n    const userCardStyleUndone = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyItems: \"center\",\n      backgroundColor: \"rgba(0,0,0,0.05)\",\n      fontSize: \"1em\",\n      fontFamily: \"poppins\",\n      fontColor: \"#334173\",\n      padding: \"2%\",\n      margin: \"2%\",\n      minWidth: \"25%\"\n    };\n    const textStyle = {\n      display: \"inline-block\",\n      fontSize: \"0.6em\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: answer.state ? userCardStyleRight : userAnswer === index ? userCardStyleWrong : userCardStyleUndone,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: textStyle,\n        children: answer.answerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), userAnswer === index ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"+\", answerScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n  AnswerCard.propTypes = {\n    answer: PropTypes.object,\n    index: PropTypes.number\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blitzBoutLobby\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"blitzBoutMainLobbyWrapper\",\n      style: blitzBoutMainLobbyWrapperStyle,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: gameName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"blitzBoutAnswersWrapper\",\n      style: blitzBoutAnswersWrapperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: answerData ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: answerData.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Err\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"blitzBoutAnswers\",\n        style: blitzBoutAnswersStyle,\n        children: answerData ? answerData.answers ? answerData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(AnswerCard, {\n          answer: answer,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Err\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Err\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_c = BlitzBoutAnswers;\nBlitzBoutAnswers.propTypes = {\n  gameName: PropTypes.string,\n  gameKey: PropTypes.string,\n  answerData: PropTypes.object,\n  answerScore: PropTypes.number,\n  score: PropTypes.number,\n  userAnswer: PropTypes.number\n};\nexport default BlitzBoutAnswers;\nvar _c;\n$RefreshReg$(_c, \"BlitzBoutAnswers\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","BlitzBoutAnswers","gameName","gameKey","answerData","answerScore","score","userAnswer","blitzBoutMainLobbyWrapperStyle","display","padding","flexDirection","alignItems","backgroundColor","fontSize","fontFamily","fontColor","blitzBoutAnswersStyle","justifyContent","minWidth","blitzBoutAnswersWrapperStyle","AnswerCard","answer","index","console","log","userCardStyleRight","justifyItems","margin","userCardStyleWrong","userCardStyleUndone","textStyle","style","state","children","answerText","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","object","number","id","question","answers","map","_c","string","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/pages/BlitzBoutAnswers.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BlitzBoutAnswers = ({ gameName, gameKey, answerData, answerScore, score, userAnswer }) => {\r\n\r\n    const blitzBoutMainLobbyWrapperStyle = {\r\n\r\n        display: \"flex\",\r\n        padding: \"2%\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#334173\",\r\n        fontSize: \"2.5em\",\r\n        fontFamily: \"poppins\",\r\n        fontColor: \"white\"\r\n\r\n    }\r\n\r\n    const blitzBoutAnswersStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        minWidth: \"80%\"\r\n    }\r\n\r\n    // #e3e3ed\r\n\r\n    const blitzBoutAnswersWrapperStyle = {\r\n\r\n        display: \"flex\",\r\n        padding: \"1%\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#e3e3ed\",\r\n        fontFamily: \"poppins\",\r\n        fontColor: \"#334173\",\r\n        minWidth: \"80%\"\r\n\r\n    }\r\n\r\n    const AnswerCard = ({ answer, index }) => {\r\n\r\n        console.log(index)\r\n        console.log(answer)\r\n\r\n        const userCardStyleRight = {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyItems: \"center\",\r\n            backgroundColor: \"green\",\r\n            fontSize: \"1em\",\r\n            fontFamily: \"poppins\",\r\n            fontColor: \"#334173\",\r\n            padding: \"2%\",\r\n            margin: \"2%\",\r\n            minWidth: \"25%\"\r\n        }\r\n\r\n        const userCardStyleWrong = {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyItems: \"center\",\r\n            backgroundColor: \"red\",\r\n            fontSize: \"1em\",\r\n            fontFamily: \"poppins\",\r\n            fontColor: \"#334173\",\r\n            padding: \"2%\",\r\n            margin: \"2%\",\r\n            minWidth: \"25%\"\r\n        }\r\n\r\n        const userCardStyleUndone = {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.05)\",\r\n            fontSize: \"1em\",\r\n            fontFamily: \"poppins\",\r\n            fontColor: \"#334173\",\r\n            padding: \"2%\",\r\n            margin: \"2%\",\r\n            minWidth: \"25%\"\r\n        }\r\n\r\n        const textStyle = {\r\n            display: \"inline-block\",\r\n            fontSize: \"0.6em\"\r\n        }\r\n\r\n        return (\r\n            <div style={answer.state ? userCardStyleRight : (userAnswer === index ? userCardStyleWrong : userCardStyleUndone)}>\r\n\r\n                <h1 style={textStyle}>{answer.answerText}</h1>\r\n                {userAnswer === index ? <h1>+{answerScore}</h1> : <></>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n    AnswerCard.propTypes = {\r\n        answer: PropTypes.object,\r\n        index: PropTypes.number\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"blitzBoutLobby\">\r\n\r\n            <main id=\"blitzBoutMainLobbyWrapper\" style={blitzBoutMainLobbyWrapperStyle}>\r\n                <h1>{gameName}</h1>\r\n            </main>\r\n\r\n            <div id=\"blitzBoutAnswersWrapper\" style={blitzBoutAnswersWrapperStyle}>\r\n                <div>\r\n                    <h1>Score: {score}</h1>\r\n                </div>\r\n                <div>\r\n                    {answerData ? <h1>{answerData.question}</h1> : <h1>Err</h1>}\r\n                </div>\r\n                <div id=\"blitzBoutAnswers\" style={blitzBoutAnswersStyle}>\r\n                    {answerData ?\r\n                        (answerData.answers ?\r\n                            answerData.answers.map(\r\n                                (answer, index) =>\r\n                                    <AnswerCard key={index} answer={answer} index={index} />\r\n                            )\r\n                            :\r\n                            <h1>Err</h1>\r\n                        )\r\n                        :\r\n                        <h1>Err</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\nBlitzBoutAnswers.propTypes = {\r\n    gameName: PropTypes.string,\r\n    gameKey: PropTypes.string,\r\n    answerData: PropTypes.object,\r\n    answerScore: PropTypes.number,\r\n    score: PropTypes.number,\r\n    userAnswer: PropTypes.number\r\n}\r\n\r\nexport default BlitzBoutAnswers;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}