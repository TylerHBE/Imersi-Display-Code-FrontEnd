{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\pages\\\\BlitzBoutPlay.js\",\n  _s = $RefreshSig$();\nimport { io } from 'socket.io-client';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport BlitzBoutLobby from './BlitzBoutLobby';\nimport { useNavigate } from \"react-router-dom\";\nimport BlitzBoutLeaderboard from './BlitzBoutLeaderboard';\nimport BlitzBoutQuestion from './BlitzBoutQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:8080');\nconst BlitzBoutPlay = ({\n  email,\n  gameKey,\n  setGameKey,\n  token\n}) => {\n  _s();\n  const [gameState, setGameState] = useState(\"lobby\");\n  const [questionData, setQuestionData] = useState({});\n  const [questionState, setQuestionState] = useState(\"answered\");\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [gameName, setGameName] = useState(\"default\");\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    const authObject = {\n      email: email,\n      gameKey: gameKey,\n      token: token\n    };\n    socket.emit(\"joinGame\", authObject);\n    socket.on('connection', data => {\n      socket.emit(\"joinGame\", authObject);\n    });\n    socket.on(\"updatePlayers\", data => {\n      setUsers(data);\n      console.log(\"new user state\");\n    });\n    socket.on(\"questionData\", data => {\n      setQuestionData(data);\n      console.log(\"new question\");\n    });\n    socket.on(\"questionState\", data => {\n      setQuestionState(data);\n      console.log(\"new question state\");\n    });\n    socket.on(\"leaderboardData\", data => {\n      setLeaderboardData(data);\n      console.log(\"new leaderboard\");\n    });\n    socket.on(\"gameState\", data => {\n      setGameState(data);\n      console.log(\"new gamestate\");\n    });\n    socket.on(\"gameName\", data => {\n      setGameName(data);\n      console.log(\"new gameName\");\n    });\n    socket.on(\"disconnection\", data => {\n      setGameKey(\"\");\n      console.log(\"hi3\");\n    });\n    socket.on(\"joinFail\", data => {\n      navigate(\"/games/BlitzBout/join\");\n      console.log(data);\n    });\n    socket.on(\"connect_error\", err => {\n      console.log(`connect_error due to ${err.message}`);\n    });\n    socket.on(\"kicked\", data => {\n      navigate(\"/games/BlitzBout/join\");\n      console.log(data);\n    });\n  }, [email, gameKey, setGameKey, navigate, token]);\n  const newAnswer = userAnswer => {\n    const sendObject = {\n      email: email,\n      gameKey: gameKey,\n      token: token,\n      answer: userAnswer\n    };\n    socket.emit(\"newAnswer\", sendObject);\n  };\n  switch (gameState) {\n    case \"\":\n      return /*#__PURE__*/_jsxDEV(BlitzBoutLobby, {\n        users: users,\n        gameKey: gameKey,\n        gameName: gameName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this);\n    case \"lobby\":\n      return /*#__PURE__*/_jsxDEV(BlitzBoutLobby, {\n        users: users,\n        gameKey: gameKey,\n        gameName: gameName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n    case \"question\":\n      return /*#__PURE__*/_jsxDEV(BlitzBoutQuestion, {\n        users: users,\n        gameKey: gameKey,\n        gameName: gameName,\n        questionData: questionData,\n        questionState: questionState,\n        newAnswer: newAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this);\n    case \"leaderboard\":\n      return /*#__PURE__*/_jsxDEV(BlitzBoutLeaderboard, {\n        users: users,\n        gameKey: gameKey,\n        gameName: gameName,\n        leaderboardData: leaderboardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this);\n    case \"finalLeaderboard\":\n      return /*#__PURE__*/_jsxDEV(BlitzBoutLeaderboard, {\n        users: users,\n        gameKey: gameKey,\n        gameName: gameName,\n        leaderboardData: leaderboardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n    default:\n      return navigate(\"/games/BlitzBout/join\");\n  }\n};\n_s(BlitzBoutPlay, \"IzL7k2LDowwiOpVg1kU0IOEeVq0=\", false, function () {\n  return [useNavigate];\n});\n_c = BlitzBoutPlay;\nBlitzBoutPlay.propTypes = {\n  email: PropTypes.string,\n  gameKey: PropTypes.string,\n  setGameKey: PropTypes.func,\n  token: PropTypes.string\n};\nexport default BlitzBoutPlay;\nvar _c;\n$RefreshReg$(_c, \"BlitzBoutPlay\");","map":{"version":3,"names":["io","React","PropTypes","useState","BlitzBoutLobby","useNavigate","BlitzBoutLeaderboard","BlitzBoutQuestion","jsxDEV","_jsxDEV","socket","connect","BlitzBoutPlay","email","gameKey","setGameKey","token","_s","gameState","setGameState","questionData","setQuestionData","questionState","setQuestionState","leaderboardData","setLeaderboardData","users","setUsers","gameName","setGameName","navigate","useEffect","authObject","emit","on","data","console","log","err","message","newAnswer","userAnswer","sendObject","answer","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","func","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/pages/BlitzBoutPlay.js"],"sourcesContent":["import { io } from 'socket.io-client'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport BlitzBoutLobby from './BlitzBoutLobby'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BlitzBoutLeaderboard from './BlitzBoutLeaderboard';\r\nimport BlitzBoutQuestion from './BlitzBoutQuestion';\r\n\r\nconst socket = io.connect('http://localhost:8080')\r\n\r\nconst BlitzBoutPlay = ({ email, gameKey, setGameKey, token }) => {\r\n\r\n    const [gameState, setGameState] = useState(\"lobby\");\r\n    const [questionData, setQuestionData] = useState({});\r\n    const [questionState, setQuestionState] = useState(\"answered\");\r\n    const [leaderboardData, setLeaderboardData] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [gameName, setGameName] = useState(\"default\");\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n\r\n        const authObject = {\r\n            email: email,\r\n            gameKey: gameKey,\r\n            token: token\r\n        };\r\n\r\n        socket.emit(\"joinGame\", authObject)\r\n\r\n        socket.on('connection', (data) => {\r\n            socket.emit(\"joinGame\", authObject)\r\n        })\r\n\r\n        socket.on(\"updatePlayers\", (data) => {\r\n            setUsers(data)\r\n            console.log(\"new user state\")\r\n        })\r\n\r\n        socket.on(\"questionData\", (data) => {\r\n            setQuestionData(data)\r\n            console.log(\"new question\")\r\n        })\r\n\r\n        socket.on(\"questionState\", (data) => {\r\n            setQuestionState(data)\r\n            console.log(\"new question state\")\r\n        })\r\n\r\n        socket.on(\"leaderboardData\", (data) => {\r\n            setLeaderboardData(data)\r\n            console.log(\"new leaderboard\")\r\n        })\r\n\r\n        socket.on(\"gameState\", (data) => {\r\n            setGameState(data)\r\n            console.log(\"new gamestate\")\r\n        })\r\n\r\n        socket.on(\"gameName\", (data) => {\r\n            setGameName(data)\r\n            console.log(\"new gameName\")\r\n        })\r\n\r\n        socket.on(\"disconnection\", (data) => {\r\n            setGameKey(\"\");\r\n            console.log(\"hi3\")\r\n        })\r\n\r\n        socket.on(\"joinFail\", (data) => {\r\n            navigate(\"/games/BlitzBout/join\")\r\n            console.log(data)\r\n        })\r\n\r\n        socket.on(\"connect_error\", (err) => {\r\n            console.log(`connect_error due to ${err.message}`);\r\n        });\r\n\r\n        socket.on(\"kicked\", (data) => {\r\n            navigate(\"/games/BlitzBout/join\")\r\n            console.log(data);\r\n        });\r\n\r\n    }, [email, gameKey, setGameKey, navigate, token])\r\n\r\n    const newAnswer = (userAnswer) => {\r\n\r\n        const sendObject = {\r\n            email: email,\r\n            gameKey: gameKey,\r\n            token: token,\r\n            answer: userAnswer\r\n        };\r\n\r\n        socket.emit(\"newAnswer\", sendObject)\r\n    }\r\n\r\n\r\n    switch (gameState) {\r\n        case \"\":\r\n            return <BlitzBoutLobby users={users} gameKey={gameKey} gameName={gameName} />\r\n        case \"lobby\":\r\n            return <BlitzBoutLobby users={users} gameKey={gameKey} gameName={gameName} />\r\n        case \"question\":\r\n            return <BlitzBoutQuestion users={users} gameKey={gameKey} gameName={gameName} questionData={questionData} questionState={questionState} newAnswer={newAnswer} />\r\n        case \"leaderboard\":\r\n            return <BlitzBoutLeaderboard users={users} gameKey={gameKey} gameName={gameName} leaderboardData={leaderboardData} />\r\n        case \"finalLeaderboard\":\r\n            return <BlitzBoutLeaderboard users={users} gameKey={gameKey} gameName={gameName} leaderboardData={leaderboardData} />\r\n        default:\r\n            return navigate(\"/games/BlitzBout/join\")\r\n    }\r\n\r\n};\r\nBlitzBoutPlay.propTypes = {\r\n    email: PropTypes.string,\r\n    gameKey: PropTypes.string,\r\n    setGameKey: PropTypes.func,\r\n    token: PropTypes.string\r\n}\r\n\r\nexport default BlitzBoutPlay;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}