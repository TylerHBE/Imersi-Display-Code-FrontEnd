{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\components\\\\AccountButton.js\";\nimport LogInButton from \"./LogInButton\";\nimport AvatarPicture from \"./AvatarPicture\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountButton = ({\n  token,\n  avatar,\n  username\n}) => {\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AvatarPicture, {\n        avatar: avatar,\n        dimension: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(LogInButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = AccountButton;\nexport default AccountButton;\nAccountButton.propTypes = {\n  token: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"AccountButton\");","map":{"version":3,"names":["LogInButton","AvatarPicture","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountButton","token","avatar","username","children","dimension","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/components/AccountButton.js"],"sourcesContent":["import LogInButton from \"./LogInButton\";\r\nimport AvatarPicture from \"./AvatarPicture\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AccountButton = ( { token, avatar, username } ) => {\r\n\r\n    if (token) {\r\n        return (\r\n            <>\r\n                <AvatarPicture avatar = {avatar} dimension = \"50px\"/>\r\n                <h1>{username}</h1>\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <LogInButton />\r\n        );\r\n    }\r\n\r\n};\r\n  \r\nexport default AccountButton;  \r\n\r\nAccountButton.propTypes = {\r\n    token: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired, \r\n    username: PropTypes.string.isRequired\r\n  }"],"mappings":";AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAE;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAM;EAErD,IAAIF,KAAK,EAAE;IACP,oBACIJ,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACIP,OAAA,CAACH,aAAa;QAACQ,MAAM,EAAIA,MAAO;QAACG,SAAS,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrDZ,OAAA;QAAAO,QAAA,EAAKD;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACrB,CAAC;EAEX,CAAC,MACI;IACD,oBACIZ,OAAA,CAACJ,WAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAEvB;AAEJ,CAAC;AAACC,EAAA,GAhBIV,aAAa;AAkBnB,eAAeA,aAAa;AAE5BA,aAAa,CAACW,SAAS,GAAG;EACtBV,KAAK,EAAEN,SAAS,CAACiB,MAAM,CAACC,UAAU;EAClCX,MAAM,EAAEP,SAAS,CAACiB,MAAM,CAACC,UAAU;EACnCV,QAAQ,EAAER,SAAS,CAACiB,MAAM,CAACC;AAC7B,CAAC;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}