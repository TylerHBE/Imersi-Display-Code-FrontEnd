{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\Imersi-V2.0\\\\react-auth\\\\src\\\\components\\\\AccountButton.js\",\n  _s = $RefreshSig$();\nimport AvatarPicture from \"./AvatarPicture\";\nimport AccountDropdown from \"./AccountDropdown\";\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport useViewport from \"../hooks/useViewport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountButton = ({\n  avatar,\n  username,\n  email,\n  favColor\n}) => {\n  _s();\n  const [isHover, setIsHover] = useState(false);\n  const width = useViewport();\n  const baseline = 600;\n  console.log(width);\n  const handleMouseEnter = () => {\n    setIsHover(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHover(false);\n  };\n  const dropdownStyle = {\n    position: \"relative\",\n    display: \"inline-block\",\n    paddingLeft: width < baseline ? \"12px\" : \"20px\",\n    paddingRight: width < baseline ? \"12px\" : \"20px\"\n  };\n  const dropdownContentStyle = {\n    display: isHover ? \"block\" : \"none\",\n    position: \"absolute\",\n    zIndex: 1,\n    right: width < baseline ? \"12px\" : \"20px\",\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n    padding: \"10px\",\n    minWidth: width < baseline ? \"250px\" : \"500px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dropdown\",\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    style: dropdownStyle,\n    children: [/*#__PURE__*/_jsxDEV(AvatarPicture, {\n      avatar: avatar,\n      dimension: \"40px\",\n      favColor: favColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dropdownContent\",\n      style: dropdownContentStyle,\n      children: /*#__PURE__*/_jsxDEV(AccountDropdown, {\n        email: email,\n        username: username,\n        avatar: avatar,\n        favColor: favColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountButton, \"43UYLLlH7bKfLpz4DlZ2XVn4VWU=\", false, function () {\n  return [useViewport];\n});\n_c = AccountButton;\nexport default AccountButton;\nAccountButton.propTypes = {\n  avatar: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string,\n  favColor: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"AccountButton\");","map":{"version":3,"names":["AvatarPicture","AccountDropdown","PropTypes","useState","useViewport","jsxDEV","_jsxDEV","AccountButton","avatar","username","email","favColor","_s","isHover","setIsHover","width","baseline","console","log","handleMouseEnter","handleMouseLeave","dropdownStyle","position","display","paddingLeft","paddingRight","dropdownContentStyle","zIndex","right","backgroundColor","padding","minWidth","id","onMouseEnter","onMouseLeave","style","children","dimension","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/Imersi-V2.0/react-auth/src/components/AccountButton.js"],"sourcesContent":["import AvatarPicture from \"./AvatarPicture\";\r\nimport AccountDropdown from \"./AccountDropdown\";\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport useViewport from \"../hooks/useViewport\";\r\n\r\nconst AccountButton = ( { avatar, username, email, favColor } ) => {\r\n\r\n    const [isHover, setIsHover] = useState(false);\r\n    const width = useViewport();\r\n    const baseline = 600;\r\n\r\n    console.log(width)\r\n\r\n    const handleMouseEnter = () => {\r\n      setIsHover(true);\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setIsHover(false);\r\n    };\r\n\r\n    const dropdownStyle = {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n        paddingLeft: width < baseline ? \"12px\" : \"20px\",\r\n        paddingRight: width < baseline ? \"12px\" : \"20px\",\r\n    }\r\n\r\n    const dropdownContentStyle = {\r\n        display: isHover ? \"block\" : \"none\",\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n        right: width < baseline ? \"12px\" : \"20px\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n        padding: \"10px\",\r\n        minWidth: width < baseline ? \"250px\" : \"500px\",\r\n    }\r\n\r\n    return (\r\n        <div id = \"dropdown\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style = {dropdownStyle}>\r\n            <AvatarPicture avatar = {avatar} dimension = \"40px\" favColor={favColor}/>\r\n            <div id = \"dropdownContent\" style = {dropdownContentStyle}>\r\n                <AccountDropdown email = {email} username = {username} avatar = {avatar} favColor={favColor}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n  \r\nexport default AccountButton;  \r\n\r\nAccountButton.propTypes = {\r\n    avatar: PropTypes.string, \r\n    username: PropTypes.string,\r\n    email: PropTypes.string,\r\n    favColor: PropTypes.string\r\n}"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAE;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAM;EAAAC,EAAA;EAE/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,KAAK,GAAGX,WAAW,CAAC,CAAC;EAC3B,MAAMY,QAAQ,GAAG,GAAG;EAEpBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAElB,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMO,aAAa,GAAG;IAClBC,QAAQ,EAAE,UAAU;IACpBC,OAAO,EAAE,cAAc;IACvBC,WAAW,EAAET,KAAK,GAAGC,QAAQ,GAAG,MAAM,GAAG,MAAM;IAC/CS,YAAY,EAAEV,KAAK,GAAGC,QAAQ,GAAG,MAAM,GAAG;EAC9C,CAAC;EAED,MAAMU,oBAAoB,GAAG;IACzBH,OAAO,EAAEV,OAAO,GAAG,OAAO,GAAG,MAAM;IACnCS,QAAQ,EAAE,UAAU;IACpBK,MAAM,EAAE,CAAC;IACTC,KAAK,EAAEb,KAAK,GAAGC,QAAQ,GAAG,MAAM,GAAG,MAAM;IACzCa,eAAe,EAAE,kBAAkB;IACnCC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAEhB,KAAK,GAAGC,QAAQ,GAAG,OAAO,GAAG;EAC3C,CAAC;EAED,oBACIV,OAAA;IAAK0B,EAAE,EAAG,UAAU;IAACC,YAAY,EAAEd,gBAAiB;IAACe,YAAY,EAAEd,gBAAiB;IAACe,KAAK,EAAId,aAAc;IAAAe,QAAA,gBACxG9B,OAAA,CAACN,aAAa;MAACQ,MAAM,EAAIA,MAAO;MAAC6B,SAAS,EAAG,MAAM;MAAC1B,QAAQ,EAAEA;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzEnC,OAAA;MAAK0B,EAAE,EAAG,iBAAiB;MAACG,KAAK,EAAIT,oBAAqB;MAAAU,QAAA,eACtD9B,OAAA,CAACL,eAAe;QAACS,KAAK,EAAIA,KAAM;QAACD,QAAQ,EAAIA,QAAS;QAACD,MAAM,EAAIA,MAAO;QAACG,QAAQ,EAAEA;MAAS;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd,CAAC;AAAC7B,EAAA,CA1CIL,aAAa;EAAA,QAGDH,WAAW;AAAA;AAAAsC,EAAA,GAHvBnC,aAAa;AA4CnB,eAAeA,aAAa;AAE5BA,aAAa,CAACoC,SAAS,GAAG;EACtBnC,MAAM,EAAEN,SAAS,CAAC0C,MAAM;EACxBnC,QAAQ,EAAEP,SAAS,CAAC0C,MAAM;EAC1BlC,KAAK,EAAER,SAAS,CAAC0C,MAAM;EACvBjC,QAAQ,EAAET,SAAS,CAAC0C;AACxB,CAAC;AAAA,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}